{
  "name": "Scripnix",
  "tagline": "Useful Python3 and bash shell scripts for macOS/BSD and \\*NIX. Useful to me, at any rate. YMMV.",
  "body": "# Scripnix\r\nUseful Python3 and bash shell scripts for macOS/BSD and \\*NIX. Useful to me, at any rate. YMMV.\r\n\r\n[![status](https://img.shields.io/pypi/status/Scripnix.svg)](https://pypi.python.org/pypi/Scripnix/)\r\n[![buildstatus](https://travis-ci.org/yukondude/Scripnix.svg?branch=master)](https://travis-ci.org/yukondude/Scripnix)\r\n[![codecov](https://codecov.io/gh/yukondude/Scripnix/branch/master/graph/badge.svg)](https://codecov.io/gh/yukondude/Scripnix)\r\n[![pypiversion](https://img.shields.io/pypi/v/Scripnix.svg)](https://pypi.python.org/pypi/Scripnix/)\r\n[![pyversions](https://img.shields.io/pypi/pyversions/Scripnix.svg)](https://pypi.python.org/pypi/Scripnix/)\r\n[![licence](https://img.shields.io/pypi/l/Scripnix.svg)](https://www.gnu.org/licenses/gpl-3.0.en.html)\r\n\r\nReplaces the old [Scripnix0](https://github.com/yukondude/Scripnix0) project which had grown crufty and was not macOS-friendly.\r\n\r\n## Motivation\r\n\r\nScripnix was born during my Linux server admin days when I wanted all of my aliases and scriplets to follow me from machine to machine.\r\nPackaging everything together made installing and keeping up-to-date that much easier.\r\nWriting it was also a bash scripting learning exercise, although I soon grew to loathe space-containing-filenames and all of the quoting that\r\nimplied.\r\n\r\nAs I moved more to MacOS, the BSD version of most commands clashed with the GNU/Linux versions that Scripnix assumed.\r\nStill wanting those handy aliases and scriplets on MacOS, I resurrected Scripnix, but with many more of the commands written in Python, and\r\nwith Homebrew-supplied GNU versions of my favourite utilities.\r\nThe Python rewrite sidestepped much of the silly bash quoting and syntax, and made testing practical.\r\n\r\n## Licence\r\n\r\nLicensed under the [GNU General Public License, version 3](https://www.gnu.org/licenses/gpl-3.0.en.html).\r\nRefer to the attached LICENSE file or see <http://www.gnu.org/licenses/> for details.\r\n\r\n## Change Log\r\n\r\nThe current version is 0.1.10.\r\nScripnix is [semver](http://semver.org/)-ish in its versioning scheme.\r\n\r\nScripnix is currently an alpha release, so expect many many breaking changes.\r\nOnce ready for prime time, the major version number will jump to 2 to reflect that this is actually the second incarnation of Scripnix.\r\n\r\n## Installation\r\n\r\nFollowing installation using one of the methods below, you may also want to run the `install-scripnix` command as the root user to setup the\r\nsystem-wide configuration.\r\nAny other users that also wish to use Scripnix should also run that command.\r\n\r\nThe `install-scripnix` command will also suggest changes to your `~/.bashrc` or `~/.profile` files to persist Scripnix in your environment.\r\nIt will also suggest changes to the `/etc/sudoers` file (vi `visudo`) so that the Scripnix commands can be run via `sudo` when necessary.\r\n\r\n### Homebrew (macOS)\r\n\r\nOn macOS, Homebrew will take care of installing any dependencies, including Python 3.\r\n\r\n    brew tap yukondude/tap\r\n    brew install scripnix\r\n    install-scripnix\r\n    \r\n### PyPI (POSIX)\r\n\r\nOn *NIX, you will first need to install Python 3.3 (or higher) using your preferred method.\r\n\r\n    pip3 install scripnix\r\n    install-scripnix\r\n    \r\n## Development Setup\r\n\r\n 1. Install Scripnix, as above, so that all of its dependencies are available.\r\n 1. Create a Python 3 virtualenv for Scripnix: `mkvirtualenv --python=$(which python3) Scripnix`\r\n 1. Clone the Scripnix repo: `git clone https://github.com/yukondude/Scripnix.git`\r\n 1. Install dependencies: `pip install -r requirements.txt -r requirements-dev.txt -r requirements-test.txt`\r\n 1. Install the project in development mode: `./setup.py develop`\r\n 1. Run the unit tests to make sure everything is copacetic: `./setup.py test`\r\n 1. Pour a snifter of Martell XO and light up a Bolivar Belicoso. \r\n\r\n## Commands\r\n\r\nThe following command descriptions were generated by `describe-scripnix` on November 15, 2016.\r\n\r\n### `backup-file`\r\n```\r\nUsage: backup-file [OPTIONS] [FILE]...\r\n\r\n  Backup the given file(s) by making a copy of each with an appended\r\n  modification date (yyyymmdd). Append a number if the backup file name\r\n  already exists. Remove any SUID or executable permissions from the backup\r\n  file.\r\n\r\nOptions:\r\n  -D, --dry-run  Show what would happen without actually doing it.\r\n  -V, --version  Show version and exit.\r\n  -h, --help     Show this message and exit.\r\n```\r\n\r\n### `command-for-pid`\r\n```\r\nUsage: command-for-pid [OPTIONS] [PID]\r\n\r\n  Return the command name for the given Process ID (PID). If a PID is not\r\n  specified, use the current process.\r\n\r\nOptions:\r\n  -V, --version  Show version and exit.\r\n  -h, --help     Show this message and exit.\r\n```\r\n\r\n### `common-netmask`\r\n```\r\nUsage: common-netmask [OPTIONS] [IPADDR]...\r\n\r\n  Given any number of full or partial dotted-quad IPv4 addresses, display\r\n  the netmask (and bit length) that matches all of the addresses.\r\n\r\nOptions:\r\n  -V, --version  Show version and exit.\r\n  -h, --help     Show this message and exit.\r\n```\r\n\r\n### `describe-scripnix`\r\n```\r\nUsage: describe-scripnix [OPTIONS]\r\n\r\n  Generate descriptions of all of the Scripnix commands in Markdown format,\r\n  suitable for appending to the Scripnix project's README.md file.\r\n\r\nOptions:\r\n  -V, --version  Show version and exit.\r\n  -h, --help     Show this message and exit.\r\n```\r\n\r\n### `gather-cron-jobs`\r\n```\r\nUsage: gather-cron-jobs [OPTIONS]\r\n\r\n  Gather all of the system and user crontab scheduled jobs and display them\r\n  in a consolidated table (tab-delimited by default): minute (m), hour (h),\r\n  day of the month (dom), month (mon), day of the week (dow), user, and\r\n  command. Optionally, the results may be sorted (as well as possible) by\r\n  the scheduled hour and minute.\r\n\r\n  Must be run as the root user.\r\n\r\nOptions:\r\n  -d, --delimiter TEXT  Column delimiter character(s).  [default: tab]\r\n  -H, --no-header       Don't display the table header row.\r\n  -r, --run-parts       Display commands in a run-parts target directory as if\r\n                        they were individually scheduled.\r\n  -s, --sort            Sort table (approximately) by scheduled time.\r\n  -V, --version         Show version and exit.\r\n  -h, --help            Show this message and exit.\r\n```\r\n\r\n### `hyphenate`\r\n```\r\nUsage: hyphenate [OPTIONS] [TEXT]...\r\n\r\n  Translate the given text argument(s) (or use the input lines from STDIN)\r\n  into the equivalent, filesystem-safe, hyphenated versions.\r\n\r\nOptions:\r\n  -d, --delimiter TEXT  Word delimiter character(s).  [default: -]\r\n  -V, --version         Show version and exit.\r\n  -h, --help            Show this message and exit.\r\n```\r\n\r\n### `install-scripnix`\r\n```\r\nUsage: install-scripnix [OPTIONS]\r\n\r\n  Install Scripnix for the current user. Global configuration settings (once\r\n  installed by the root user) are stored under the /etc/scripnix/ directory.\r\n  Per-user configuration settings, including for the root user, are stored\r\n  under the ~/.scripnix/ directory and override the global settings. The\r\n  installation can be re-run repeatedly, but will not overwrite existing\r\n  configuration settings (however file and directory permissions will be\r\n  reset).\r\n\r\nOptions:\r\n  --yes          Confirm the action without prompting.\r\n  -v, --verbose  Display the commands as they are being executed.\r\n  -D, --dry-run  Show what would happen without actually doing it.\r\n  -V, --version  Show version and exit.\r\n  -h, --help     Show this message and exit.\r\n```\r\n\r\n### `is-remote-cnx`\r\n```\r\nUsage: is-remote-cnx \r\n\r\n  Detects whether this terminal is a remote SSH connection. Exit code will be\r\n  zero if it is.\r\n```\r\n\r\n### `os-name`\r\n```\r\nUsage: os-name [OPTIONS]\r\n\r\n  Return the operating system platform name.\r\n\r\nOptions:\r\n  -T, --no-translate  Do not translate the original operating system string to\r\n                      its more familiar name.\r\n  -V, --version       Show version and exit.\r\n  -h, --help          Show this message and exit.\r\n```\r\n\r\n### `show-cron-jobs`\r\n```\r\nUsage: show-cron-jobs \r\n\r\n  Gather all of the system and user crontab scheduled jobs and display them\r\n  in a consolidated table, sorted approximately by the scheduled time.\r\n```\r\n\r\n### `top-level-pid`\r\n```\r\nUsage: top-level-pid [OPTIONS] [PID]\r\n\r\n  Return the top-level parent (below the init or launchd process) Process ID\r\n  (PID) for the given PID. If a PID is not specified, use the current\r\n  process.\r\n\r\nOptions:\r\n  -V, --version  Show version and exit.\r\n  -h, --help     Show this message and exit.\r\n```\r\n\r\n### `whereis-scripnix`\r\n```\r\nUsage: whereis-scripnix [OPTIONS]\r\n\r\n  Return the full, absolute path to the Scripnix package.\r\n\r\nOptions:\r\n  -V, --version  Show version and exit.\r\n  -h, --help     Show this message and exit.\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}